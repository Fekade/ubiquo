require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'
require "bundler/gem_tasks"


def run_without_aborting(*tasks)
  errors = []

  tasks.each do |task|
    begin
      puts "\n*********** Running #{task} ************\n\n"
      Rake::Task[task].invoke
    rescue Exception
      errors << task
    end
  end

  abort "Errors running #{errors.join(', ')}" if errors.any?
end

desc 'Default: run unit tests (w postgresql, mysql2 and sqlite).'
task :default => :test

desc 'Run mysql2, sqlite, and postgresql tests'
task :test do
  tasks = defined?(JRUBY_VERSION) ?
    %w(test_jdbcmysql test_jdbcsqlite3 test_jdbcpostgresql) :
    %w(test_sqlite3 test_postgresql test_mysql2)
  run_without_aborting(*tasks)
end

%w( mysql2 postgresql sqlite3 jdbcmysql jdbcpostgresql jdbcsqlite3).each do |adapter|
  Rake::TestTask.new("test_#{adapter}") { |t|
    t.libs << 'test'
    t.pattern = 'test/**/*_test.rb'
#    t.warning = true
    t.verbose = true
  }

  namespace adapter do
    task :test => "test_#{adapter}"

    # Set the connection environment for the adapter
    task(:env) do
      ENV['ARCONN'] = adapter
      ENV['UGEM'] = 'ubiquo_core'
    end
  end

  # Make sure the adapter test evaluates the env setting task
  task "test_#{adapter}" => "#{adapter}:env"
end

desc 'Generate documentation for the ubiquo_core plugin.'
Rake::RDocTask.new(:rdoc) do |rdoc|
  rdoc.rdoc_dir = 'rdoc'
  rdoc.title    = 'Ubiquo'
  rdoc.options << '--line-numbers' << '--inline-source'
  rdoc.rdoc_files.include('README')
  rdoc.rdoc_files.include('lib/**/*.rb')
end

def update_version(function, name)
  major, minor, tiny = File.read("VERSION").strip.split(".").map { |i| i.to_i }
  eval "#{name} #{function}= 1"
  File.open("VERSION", "w") { |f| f.puts [major, minor, tiny].join(".") }
  puts `cat VERSION`
end

{ :bump => "+", :debump => "-"}.each do |key, value|
  namespace key do
    [ :major, :minor, :tiny].each do |position|
      eval <<-CODE
      desc "#{key.to_s.capitalize} #{position} number by 1"
      task :#{position} do
        update_version("#{value}", "#{position}")
      end
    CODE
    end
  end
end
